{"version":3,"file":"static/js/139.e0419599.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.js","pages/Register.js","../node_modules/@chakra-ui/icons/src/AtSign.tsx","../node_modules/@chakra-ui/icons/src/Edit.tsx","../node_modules/@chakra-ui/icons/src/Lock.tsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { register } from '../../redux/auth/operations';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\n\nimport {\n  Box,\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n  FormErrorMessage,\n  VStack,\n  Heading,\n  InputGroup,\n  InputLeftElement,\n} from '@chakra-ui/react';\nimport { AtSignIcon, EditIcon, LockIcon } from '@chakra-ui/icons';\n\nconst contactsSchema = Yup.object().shape({\n  name: Yup.string().min(3, 'Too Short!').required('Must not be empty'),\n  email: Yup.string()\n    .email('Enter valid email address')\n    .required('Must not be empty'),\n  password: Yup.string()\n    .min(7, 'Must be 7 or more')\n    .max(15, 'Must be no more than 15')\n    .required('Must not be empty'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        email: '',\n        password: '',\n      }}\n      validationSchema={contactsSchema}\n      onSubmit={(values, actions) => {\n        dispatch(register(values));\n        actions.resetForm();\n      }}\n    >\n      <Box padding=\"4\" w=\"100%\">\n        <Form>\n          <VStack\n            spacing=\"4\"\n            p=\"5\"\n            bg=\"white\"\n            align=\"stretch\"\n            w=\"350px\"\n            ml=\"auto\"\n            mr=\"auto\"\n            borderRadius=\"5\"\n          >\n            <Heading size=\"md\">Register:</Heading>\n            <Field name=\"name\">\n              {({ field, form }) => (\n                <FormControl isInvalid={form.errors.name && form.touched.name}>\n                  <FormLabel htmlFor=\"name\" fontSize=\"\">\n                    Username\n                  </FormLabel>\n                  <InputGroup>\n                    <InputLeftElement pointerEvents=\"none\">\n                      <EditIcon color=\"gray.300\" mb=\"2\" />\n                    </InputLeftElement>\n                    <Input {...field} id=\"name\" type=\"text\" size=\"sm\" />\n                  </InputGroup>\n                  <FormErrorMessage color=\"red\">\n                    {form.errors.name}\n                  </FormErrorMessage>\n                </FormControl>\n              )}\n            </Field>\n\n            <Field name=\"email\">\n              {({ field, form }) => (\n                <FormControl\n                  isInvalid={form.errors.email && form.touched.email}\n                >\n                  <FormLabel htmlFor=\"email\" fontSize=\"\">\n                    Email\n                  </FormLabel>\n                  <InputGroup>\n                    <InputLeftElement pointerEvents=\"none\">\n                      <AtSignIcon color=\"gray.300\" mb=\"2\" />\n                    </InputLeftElement>\n                    <Input {...field} id=\"email\" type=\"email\" size=\"sm\" />\n                  </InputGroup>\n                  <FormErrorMessage color=\"red\">\n                    {form.errors.email}\n                  </FormErrorMessage>\n                </FormControl>\n              )}\n            </Field>\n\n            <Field name=\"password\">\n              {({ field, form }) => (\n                <FormControl\n                  isInvalid={form.errors.password && form.touched.password}\n                >\n                  <FormLabel htmlFor=\"password\">Password</FormLabel>\n                  <InputGroup>\n                    <InputLeftElement pointerEvents=\"none\">\n                      <LockIcon color=\"gray.300\" mb=\"2\" />\n                    </InputLeftElement>\n                    <Input {...field} id=\"password\" type=\"password\" size=\"sm\" />\n                  </InputGroup>\n                  <FormErrorMessage color=\"red\">\n                    {form.errors.password}\n                  </FormErrorMessage>\n                </FormControl>\n              )}\n            </Field>\n\n            <Button colorScheme=\"teal\" type=\"submit\">\n              Log In\n            </Button>\n          </VStack>\n        </Form>\n      </Box>\n    </Formik>\n  );\n};\n","import { Helmet } from 'react-helmet-async';\nimport { RegisterForm } from '../components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <Helmet>\n        <title>Phonebook - Register</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n}\n","import { createIcon } from \"@chakra-ui/icon\"\n\nexport const AtSignIcon = createIcon({\n  displayName: \"AtSignIcon\",\n  d: \"M12,.5A11.634,11.634,0,0,0,.262,12,11.634,11.634,0,0,0,12,23.5a11.836,11.836,0,0,0,6.624-2,1.25,1.25,0,1,0-1.393-2.076A9.34,9.34,0,0,1,12,21a9.132,9.132,0,0,1-9.238-9A9.132,9.132,0,0,1,12,3a9.132,9.132,0,0,1,9.238,9v.891a1.943,1.943,0,0,1-3.884,0V12A5.355,5.355,0,1,0,12,17.261a5.376,5.376,0,0,0,3.861-1.634,4.438,4.438,0,0,0,7.877-2.736V12A11.634,11.634,0,0,0,12,.5Zm0,14.261A2.763,2.763,0,1,1,14.854,12,2.812,2.812,0,0,1,12,14.761Z\",\n})\n","import { createIcon } from \"@chakra-ui/icon\"\n\nexport const EditIcon = createIcon({\n  displayName: \"EditIcon\",\n  path: (\n    <g fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeWidth=\"2\">\n      <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\" />\n      <path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\" />\n    </g>\n  ),\n})\n","import { createIcon } from \"@chakra-ui/icon\"\n\nexport const LockIcon = createIcon({\n  d: \"M19.5,9.5h-.75V6.75a6.75,6.75,0,0,0-13.5,0V9.5H4.5a2,2,0,0,0-2,2V22a2,2,0,0,0,2,2h15a2,2,0,0,0,2-2V11.5A2,2,0,0,0,19.5,9.5Zm-9.5,6a2,2,0,1,1,3,1.723V19.5a1,1,0,0,1-2,0V17.223A1.994,1.994,0,0,1,10,15.5ZM7.75,6.75a4.25,4.25,0,0,1,8.5,0V9a.5.5,0,0,1-.5.5H8.25a.5.5,0,0,1-.5-.5Z\",\n  displayName: \"LockIcon\",\n})\n"],"names":["contactsSchema","Yup","shape","name","min","required","email","password","max","RegisterForm","dispatch","useDispatch","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","register","resetForm","children","Box","padding","w","Form","_jsxs","VStack","spacing","p","bg","align","ml","mr","borderRadius","Heading","size","Field","_ref","field","form","FormControl","isInvalid","errors","touched","FormLabel","htmlFor","fontSize","InputGroup","InputLeftElement","pointerEvents","EditIcon","color","mb","Input","_objectSpread","id","type","FormErrorMessage","_ref2","AtSignIcon","_ref3","LockIcon","Button","colorScheme","Register","Helmet","createIcon","displayName","d","path","fill","stroke","strokeLinecap","strokeWidth"],"sourceRoot":""}