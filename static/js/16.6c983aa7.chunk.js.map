{"version":3,"file":"static/js/16.6c983aa7.chunk.js","mappings":"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","sources":["components/Section/Section.styled.js","components/Section/Section.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactItem.styled.js","components/ContactList/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/Contacts.styled.js","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SectionComponents = styled.section`\n  margin-top: ${p => p.theme.spacing(2)};\n  margin-bottom: ${p => p.theme.spacing(2)};\n`;\n\nexport const Title = styled.h2`\n  margin-top: ${p => p.theme.spacing(2)};\n  margin-bottom: ${p => p.theme.spacing(2)};\n`;\n","import { SectionComponents, Title } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionComponents>\n      {title && <Title>{title}</Title>}\n      {children}\n    </SectionComponents>\n  );\n};\n","import {\n  Form as FormikForm,\n  Field as FormikField,\n  ErrorMessage as FormikError,\n} from 'formik';\nimport styled from 'styled-components';\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  max-width: 320px;\n`;\n\nexport const Field = styled(FormikField)`\n  width: 100%;\n\n  padding: ${p => p.theme.spacing(1)};\n  margin: ${p => p.theme.spacing(1)} 0;\n\n  border: 1px solid ${p => p.theme.colors.greyText};\n  border-radius: ${p => p.theme.spacing(1)};\n  background-color: ${p => p.theme.colors.white};\n\n  transition: border-color 0.3s ease-in-out;\n\n  &:focus {\n    border: 1px solid ${p => p.theme.colors.acent};\n    outline: none;\n  }\n\n  &::placeholder {\n    color: #aaa;\n    font-style: italic;\n  }\n`;\n\nexport const FormGroup = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  color: ${p => p.theme.colors.error};\n  font-size: 14px;\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  padding: ${p => p.theme.spacing(1)} ${p => p.theme.spacing(3)};\n  font-size: 16px;\n  text-align: center;\n  text-decoration: none;\n  cursor: pointer;\n  border: 1px solid ${p => p.theme.colors.acent};\n  color: ${p => p.theme.colors.acent};\n  border-radius: ${p => p.theme.spacing(1)};\n  transition: background-color 0.3s, color 0.3s, border-color 0.3s;\n\n  &:hover {\n    background-color: ${p => p.theme.colors.acent};\n    color: ${p => p.theme.colors.white};\n  }\n\n  &:active {\n    background-color: ${p => p.theme.colors.acent2};\n    border-color: ${p => p.theme.colors.acent2};\n    color: ${p => p.theme.colors.white};\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  Form,\n  Button,\n  FormGroup,\n  Field,\n  ErrorMessage,\n} from './ContactForm.styled';\n\nconst contactsSchema = Yup.object().shape({\n  name: Yup.string().min(3, 'Too Short!').required('Must not be empty'),\n  number: Yup.string()\n    .min(9, 'Must be 9 or more')\n    .max(15, 'Must be no more than 15')\n    .required('Must not be empty'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={contactsSchema}\n      onSubmit={(values, actions) => {\n        dispatch(addContact(values));\n        actions.resetForm();\n      }}\n    >\n      <Form>\n        <FormGroup>\n          Name\n          <Field name=\"name\" />\n          <ErrorMessage name=\"name\" component=\"span\" />\n        </FormGroup>\n        <FormGroup>\n          Number\n          <Field name=\"number\" />\n          <ErrorMessage name=\"number\" component=\"span\" />\n        </FormGroup>\n\n        <Button type=\"submit\" name=\"add\">\n          Add contact\n        </Button>\n      </Form>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Contacts = styled.ul`\n  margin: ${p => p.theme.spacing(3)};\n`;\n","import styled from 'styled-components';\n\nexport const ContactsItem = styled.li`\n  max-width: 100%;\n  margin-bottom: ${p => p.theme.spacing(2)};\n`;\n\nexport const Button = styled.button`\n  padding: ${props => props.theme.spacing(1)};\n  margin-left: ${p => p.theme.spacing(1)};\n  border: 1px solid transparent;\n\n  color: ${p => p.theme.colors.acent3};\n  background-color: ${p => p.theme.colors.white};\n\n  &:hover {\n    border: 1px solid ${p => p.theme.colors.acent3};\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { ContactsItem, Button } from './ContactItem.styled';\n\nexport const ContactItem = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <ContactsItem>\n      {contact.name}: {contact.phone}\n      <Button onClick={() => dispatch(deleteContact(contact.id))}>\n        Delete\n      </Button>\n    </ContactsItem>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { visibleContacts } from '../../redux/contacts/selectors';\n\nimport { Contacts } from './ContactList.styled';\nimport { ContactItem } from './ContactItem';\n\nexport const ContactList = () => {\n  const visibleContact = useSelector(visibleContacts);\n\n  return (\n    <>\n      {visibleContact.length ? (\n        <Contacts>\n          {visibleContact.map(contact => (\n            <ContactItem key={contact.id} contact={contact} />\n          ))}\n        </Contacts>\n      ) : (\n        <p>No contacts according to your search!</p>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterInput = styled.input`\n  width: 100%;\n\n  padding: ${p => p.theme.spacing(1)};\n  margin: ${p => p.theme.spacing(2)} 0;\n\n  border: 1px solid ${p => p.theme.colors.greyText};\n  border-radius: ${p => p.theme.spacing(1)};\n  background-color: ${p => p.theme.colors.white};\n\n  transition: border-color 0.3s ease-in-out;\n\n  &:focus {\n    border: 1px solid ${p => p.theme.colors.acent};\n    outline: none;\n  }\n\n  &::placeholder {\n    color: #aaa;\n    font-style: italic;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { updateFilter } from '../../redux/contacts/filterSlice';\nimport { selectFilters } from '../../redux/contacts/selectors';\nimport { FilterInput } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      Find contacts by name\n      <FilterInput\n        type=\"text\"\n        name=\"filter\"\n        onChange={evt => dispatch(updateFilter(evt.target.value))}\n        value={useSelector(selectFilters)}\n      />\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: flex-start;\n`;\n\nexport const SectionWrapper = styled.div`\n  width: 350px;\n  background-color: ${p => p.theme.colors.white};\n\n  border-radius: ${p => p.theme.spacing(3)};\n  box-shadow: 3px 5px 5px ${p => p.theme.colors.greyText};\n\n  padding: ${p => p.theme.spacing(3)};\n  margin: ${p => p.theme.spacing(6)};\n`;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Helmet } from 'react-helmet-async';\nimport { Loader } from '../components/Loader/Loader';\nimport {\n  selectContacts,\n  selectIsLoading,\n  selectError,\n} from '../redux/contacts/selectors';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { Section } from '../components/Section/Section';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { Filter } from '../components/Filter/Filter';\n\nimport { Wrapper, SectionWrapper } from './Contacts.styled';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Wrapper>\n      <Helmet>\n        <title>Phonebook - Contacts list</title>\n      </Helmet>\n      <SectionWrapper>\n        <Section title=\"Add contact\">\n          <ContactForm />\n        </Section>\n      </SectionWrapper>\n\n      <SectionWrapper>\n        {contacts.length ? (\n          <Section title=\"Contacts\">\n            <Filter />\n            <ContactList />\n          </Section>\n        ) : (\n          <p>No contacts...</p>\n        )}\n        {isLoading && !error && <Loader />}\n      </SectionWrapper>\n    </Wrapper>\n  );\n}\n"],"names":["SectionComponents","styled","_templateObject","_taggedTemplateLiteral","p","theme","spacing","Title","_templateObject2","Section","_ref","title","children","_jsxs","_jsx","Form","FormikForm","Field","FormikField","colors","greyText","white","acent","FormGroup","_templateObject3","ErrorMessage","FormikError","_templateObject4","error","Button","_templateObject5","acent2","contactsSchema","Yup","shape","name","min","required","number","max","ContactForm","dispatch","useDispatch","Formik","initialValues","validationSchema","onSubmit","values","actions","addContact","resetForm","component","type","Contacts","ContactsItem","props","acent3","ContactItem","contact","phone","onClick","deleteContact","id","ContactList","visibleContact","useSelector","visibleContacts","_Fragment","length","map","FilterInput","Filter","onChange","evt","updateFilter","target","value","selectFilters","Wrapper","SectionWrapper","contacts","selectContacts","isLoading","selectIsLoading","selectError","useEffect","fetchContacts","Helmet","Loader"],"sourceRoot":""}