{"version":3,"file":"static/js/851.7438e396.chunk.js","mappings":"8PAAaA,EAAU,SAAHC,GAA6B,IAAvBC,EAAKD,EAALC,MAAOC,EAAQF,EAARE,SAC/B,OACEC,EAAAA,EAAAA,MAAA,WAAAD,SAAA,CACGD,IAASG,EAAAA,EAAAA,KAAA,MAAAF,SAAKD,IACdC,IAGP,E,0ICLaG,GAAYC,EAAAA,EAAAA,GAAW,CAClCC,EAAG,s3BACHC,YAAa,YACbC,QAAS,cCaLC,EAAiBC,EAAAA,KAAaC,MAAM,CACxCC,KAAMF,EAAAA,KAAaG,IAAI,EAAG,cAAcC,SAAS,qBACjDC,OAAQL,EAAAA,KACLG,IAAI,EAAG,qBACPG,IAAI,GAAI,2BACRF,SAAS,uBAGDG,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OACEhB,EAAAA,EAAAA,KAACiB,EAAAA,GAAM,CACLC,cAAe,CACbT,KAAM,GACNG,OAAQ,IAEVO,iBAAkBb,EAClBc,SAAU,SAACC,EAAQC,GACjBP,GAASQ,EAAAA,EAAAA,IAAWF,IACpBC,EAAQE,WACV,EAAE1B,UAEFE,EAAAA,EAAAA,KAACyB,EAAAA,GAAI,CAAA3B,UACHC,EAAAA,EAAAA,MAAC2B,EAAAA,EAAM,CACLC,QAAQ,IACRC,EAAE,IACFC,EAAE,IACFC,GAAG,QACHC,MAAM,UACNC,EAAE,QACFC,aAAa,IAAGnC,SAAA,EAEhBE,EAAAA,EAAAA,KAACkC,EAAAA,EAAO,CAACC,KAAK,KAAIrC,SAAC,kBACnBE,EAAAA,EAAAA,KAACoC,EAAAA,GAAK,CAAC3B,KAAK,OAAMX,SACf,SAAAF,GAAA,IAAGyC,EAAKzC,EAALyC,MAAOC,EAAI1C,EAAJ0C,KAAI,OACbvC,EAAAA,EAAAA,MAACwC,EAAAA,GAAW,CAACC,UAAWF,EAAKG,OAAOhC,MAAQ6B,EAAKI,QAAQjC,KAAKX,SAAA,EAC5DE,EAAAA,EAAAA,KAAC2C,EAAAA,EAAS,CAACC,QAAQ,OAAOC,SAAS,GAAE/C,SAAC,cAGtCC,EAAAA,EAAAA,MAAC+C,EAAAA,EAAU,CAAAhD,SAAA,EACTE,EAAAA,EAAAA,KAAC+C,EAAAA,EAAgB,CAACC,cAAc,OAAMlD,UACpCE,EAAAA,EAAAA,KAACiD,EAAAA,EAAQ,CAACC,MAAM,WAAWC,GAAG,SAEhCnD,EAAAA,EAAAA,KAACoD,EAAAA,GAAKC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKhB,GAAK,IAAEiB,GAAG,OAAOC,KAAK,OAAOpB,KAAK,YAG/CnC,EAAAA,EAAAA,KAACwD,EAAAA,GAAgB,CAACN,MAAM,MAAKpD,SAC1BwC,EAAKG,OAAOhC,SAEH,KAGlBT,EAAAA,EAAAA,KAACoC,EAAAA,GAAK,CAAC3B,KAAK,SAAQX,SACjB,SAAA2D,GAAA,IAAGpB,EAAKoB,EAALpB,MAAOC,EAAImB,EAAJnB,KAAI,OACbvC,EAAAA,EAAAA,MAACwC,EAAAA,GAAW,CACVC,UAAWF,EAAKG,OAAO7B,QAAU0B,EAAKI,QAAQ9B,OAAOd,SAAA,EAErDE,EAAAA,EAAAA,KAAC2C,EAAAA,EAAS,CAACC,QAAQ,SAASC,SAAS,GAAE/C,SAAC,YAGxCC,EAAAA,EAAAA,MAAC+C,EAAAA,EAAU,CAAAhD,SAAA,EACTE,EAAAA,EAAAA,KAAC+C,EAAAA,EAAgB,CAACC,cAAc,OAAMlD,UACpCE,EAAAA,EAAAA,KAACC,EAAS,CAACiD,MAAM,WAAWC,GAAG,SAEjCnD,EAAAA,EAAAA,KAACoD,EAAAA,GAAKC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKhB,GAAK,IAAEiB,GAAG,SAASC,KAAK,OAAOpB,KAAK,YAEjDnC,EAAAA,EAAAA,KAACwD,EAAAA,GAAgB,CAACN,MAAM,MAAKpD,SAC1BwC,EAAKG,OAAO7B,WAEH,KAGlBZ,EAAAA,EAAAA,KAAC0D,EAAAA,EAAM,CAACC,YAAY,OAAOJ,KAAK,SAASpB,KAAK,KAAIrC,SAAC,sBAO7D,E,2KClFA,GAA4C8D,EAAAA,EAAAA,GAE1C,CACAnD,KAAM,oBACNoD,aAAc,oGACfC,GAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GALMC,EAAAA,EAAAA,GAAoBC,EAAa,KAqC3BC,GAAOC,EAAAA,EAAAA,IAA4B,SAAcC,EAAOC,GACnE,IAAMC,GAASC,EAAAA,EAAAA,IAAoB,OAAQH,GAC3C,GAMII,EAAAA,EAAAA,IAAiBJ,GALnBrE,EAAAA,EAAAA,SAAA0E,EAAAA,EACAC,UAAAA,OAAAA,IAAY,WACZC,EAAAA,EAAAA,cACA/C,EAAAA,EAAAA,QACGgD,GAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAGCC,GAAgBC,EAAAA,EAAAA,GAAiB/E,GAIjCgF,EAAenD,GAAUA,EAAAA,EAAAA,GAAAA,CAAAA,EAFd,kCAE4B,CAAEoD,GAAIpD,IAAc,CAAC,EAElE,OACE,SAACoC,EAAAA,CAAmBiB,MAAOX,EACzBvE,UAAAA,EAAAA,EAAAA,KAACmF,EAAAA,EAAAA,IAASC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAA,CACRd,IAAAA,EACAe,cAAeV,EACfW,kBAAmBV,EAKnBW,KAAK,OACLC,OAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAA,CAAAA,EAAYjB,EAAOkB,WAAcT,IAC7BH,GAAAA,CAAAA,EAAAA,CAEH7E,SAAAA,MAIT,IAEAmE,EAAK7D,YAAc,QAEQ8D,EAAAA,EAAAA,IAA4B,SAACC,EAAOC,GACrCD,EAAhBqB,GAAR,IAAeb,GAAAA,EAAAA,EAAAA,GAASR,EAAAA,GACxB,OACE,SAACF,GAAAA,EAAAA,EAAAA,GAAAA,CAAKG,IAAAA,EAAUoB,GAAG,KAAKf,UAAU,UAAUgB,YAAY,OAAUd,GAEtE,IAEYvE,YAAc,cAEnB,IAAMsF,GAAgBxB,EAAAA,EAAAA,IAA4B,SACvDC,EACAC,GAEwBD,EAAhBqB,GAAR,IAAeb,GAAAA,EAAAA,EAAAA,GAASR,EAAAA,GACxB,OACE,SAACF,GAAAA,EAAAA,EAAAA,GAAAA,CAAKG,IAAAA,EAAUoB,GAAG,KAAKf,UAAU,UAAUgB,YAAY,OAAUd,GAEtE,IAEAe,EAActF,YAAc,gBASrB,IAAMuF,GAAWzB,EAAAA,EAAAA,IAAgC,SACtDC,EACAC,GAEA,IAAMC,EAASL,IAEf,OAAO,SAACiB,EAAAA,EAAAA,IAASW,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAA,CAACxB,IAAAA,GAAcD,GAAAA,CAAAA,EAAAA,CAAOmB,MAAOjB,EAAOwB,OACvD,IAEAF,EAASvF,YAAc,YAOC8D,EAAAA,EAAAA,IAA6B,SACnDC,EACAC,GAEA,IAAMC,EAASL,IAEf,OAAO,SAAC8B,EAAAA,GAAIA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAA,CAAC1B,IAAAA,EAAUiB,KAAK,gBAAmBlB,GAAAA,CAAAA,EAAAA,CAAOmB,MAAOjB,EAAO0B,OACtE,IAES3F,YAAc,WC5IhB,IAAM4F,EAAc,SAAHpG,GAAqB,IAAfqG,EAAOrG,EAAPqG,QACtBlF,GAAWC,EAAAA,EAAAA,MAEjB,OACEjB,EAAAA,EAAAA,MAAC4F,EAAQ,CAACZ,GAAG,IAAGjF,SAAA,EACdE,EAAAA,EAAAA,KAAA,KAAAF,SAAImG,EAAQxF,OAAS,KAAGwF,EAAQrF,QAChCZ,EAAAA,EAAAA,KAAC0D,EAAAA,EAAM,CACLvB,KAAK,KACL+D,GAAG,IACHvC,YAAY,SACZwC,QAAS,kBAAMpF,GAASqF,EAAAA,EAAAA,IAAcH,EAAQ3C,IAAI,EAACxD,SACpD,aAKP,ECdauG,EAAc,WACzB,IAAMC,GAAiBC,EAAAA,EAAAA,IAAYC,EAAAA,IAEnC,OACExG,EAAAA,EAAAA,KAAAyG,EAAAA,SAAA,CAAA3G,SACGwG,EAAeI,QACd1G,EAAAA,EAAAA,KAAC0F,EAAa,CAACX,GAAG,IAAGjF,SAClBwG,EAAeK,KAAI,SAAAV,GAAO,OACzBjG,EAAAA,EAAAA,KAACgG,EAAW,CAAkBC,QAASA,GAArBA,EAAQ3C,GAAwB,OAItDtD,EAAAA,EAAAA,KAAA,KAAAF,SAAG,2CAIX,E,mBCpBa8G,GAAc1G,EAAAA,EAAAA,GAAW,CACpCC,EAAG,iMACHC,YAAa,gBCGFyG,EAAS,WACpB,IAAM9F,GAAWC,EAAAA,EAAAA,MAEjB,OACEjB,EAAAA,EAAAA,MAAC+G,EAAAA,GAAG,CAACC,GAAG,IAAGjH,SAAA,CAAC,yBAEVC,EAAAA,EAAAA,MAAC+C,EAAAA,EAAU,CAAAhD,SAAA,EACTE,EAAAA,EAAAA,KAAC+C,EAAAA,EAAgB,CAACC,cAAc,OAAMlD,UACpCE,EAAAA,EAAAA,KAAC4G,EAAW,CAAC1D,MAAM,WAAW6B,GAAG,SAEnC/E,EAAAA,EAAAA,KAACoD,EAAAA,EAAK,CACJ2B,GAAG,IACH5C,KAAK,KACLoB,KAAK,OACL9C,KAAK,SACLuG,SAAU,SAAAC,GAAG,OAAIlG,GAASmG,EAAAA,EAAAA,GAAaD,EAAIE,OAAOnC,OAAO,EACzDA,OAAOuB,EAAAA,EAAAA,IAAYa,EAAAA,WAK7B,E,WCXe,SAASC,KACtB,IAAMtG,GAAWC,EAAAA,EAAAA,MACXsG,GAAWf,EAAAA,EAAAA,IAAYgB,EAAAA,IAEvBC,GAAYjB,EAAAA,EAAAA,IAAYkB,EAAAA,IACxBC,GAAQnB,EAAAA,EAAAA,IAAYoB,EAAAA,IAM1B,OAJAC,EAAAA,EAAAA,YAAU,WACR7G,GAAS8G,EAAAA,EAAAA,MACX,GAAG,CAAC9G,KAGFhB,EAAAA,EAAAA,MAAC+H,GAAAA,EAAI,CAACC,WAAW,aAAaC,eAAe,SAAQlI,SAAA,EACnDE,EAAAA,EAAAA,KAACiI,EAAAA,GAAM,CAAAnI,UACLE,EAAAA,EAAAA,KAAA,SAAAF,SAAO,iCAETE,EAAAA,EAAAA,KAAA,OAAAF,UACEE,EAAAA,EAAAA,KAACL,EAAO,CAAAG,UACNE,EAAAA,EAAAA,KAACc,EAAW,SAIhBf,EAAAA,EAAAA,MAAC+G,EAAAA,GAAG,CACFnF,QAAQ,IACRC,EAAE,IACFC,EAAE,IACFC,GAAG,QACHC,MAAM,UACNC,EAAE,QACFC,aAAa,IACbiG,UAAU,OAAMpI,SAAA,EAEhBE,EAAAA,EAAAA,KAACkC,EAAAA,EAAO,CAACC,KAAK,KAAIrC,SAAC,cAClBwH,EAASZ,QACR3G,EAAAA,EAAAA,MAACJ,EAAO,CAAAG,SAAA,EACNE,EAAAA,EAAAA,KAAC6G,EAAM,KACP7G,EAAAA,EAAAA,KAACqG,EAAW,QAGdrG,EAAAA,EAAAA,KAAA,KAAAF,SAAG,mBAEJ0H,IAAcE,IAAS1H,EAAAA,EAAAA,KAACmI,EAAAA,EAAM,SAIvC,C,8EC5DalF,GAAW/C,EAAAA,EAAAA,GAAW,CACjCE,YAAa,WACbgI,MACE,UAAC,KAAEC,KAAK,OAAOC,OAAO,eAAeC,cAAc,QAAQC,YAAY,IACrE1I,SAAAA,EAAAA,EAAAA,EAAAA,KAAC,QAAKK,EAAE,gEACR,SAAC,QAAKA,EAAE,gE","sources":["components/Section/Section.js","../node_modules/@chakra-ui/icons/src/Phone.tsx","components/ContactForm/ContactForm.js","../node_modules/@chakra-ui/layout/src/list.tsx","components/ContactList/ContactItem.js","components/ContactList/ContactList.js","../node_modules/@chakra-ui/icons/src/Search2.tsx","components/Filter/Filter.js","pages/Contacts.js","../node_modules/@chakra-ui/icons/src/Edit.tsx"],"sourcesContent":["export const Section = ({ title, children }) => {\n  return (\n    <section>\n      {title && <h2>{title}</h2>}\n      {children}\n    </section>\n  );\n};\n","import { createIcon } from \"@chakra-ui/icon\"\n\nexport const PhoneIcon = createIcon({\n  d: \"M2.20731,0.0127209 C2.1105,-0.0066419 1.99432,-0.00664663 1.91687,0.032079 C0.871279,0.438698 0.212942,1.92964 0.0580392,2.95587 C-0.426031,6.28627 2.20731,9.17133 4.62766,11.0689 C6.77694,12.7534 10.9012,15.5223 13.3409,12.8503 C13.6507,12.5211 14.0186,12.037 13.9993,11.553 C13.9412,10.7397 13.186,10.1588 12.6051,9.71349 C12.1598,9.38432 11.2304,8.47427 10.6495,8.49363 C10.1267,8.51299 9.79754,9.05515 9.46837,9.38432 L8.88748,9.96521 C8.79067,10.062 7.55145,9.24878 7.41591,9.15197 C6.91248,8.8228 6.4284,8.45491 6.00242,8.04829 C5.57644,7.64167 5.18919,7.19632 4.86002,6.73161 C4.7632,6.59607 3.96933,5.41495 4.04678,5.31813 C4.04678,5.31813 4.72448,4.58234 4.91811,4.2919 C5.32473,3.67229 5.63453,3.18822 5.16982,2.45243 C4.99556,2.18135 4.78257,1.96836 4.55021,1.73601 C4.14359,1.34875 3.73698,0.942131 3.27227,0.612963 C3.02055,0.419335 2.59457,0.0708094 2.20731,0.0127209 Z\",\n  displayName: \"PhoneIcon\",\n  viewBox: \"0 0 14 14\",\n})\n","import { useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\n\nimport {\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n  FormErrorMessage,\n  VStack,\n  Heading,\n  InputGroup,\n  InputLeftElement,\n} from '@chakra-ui/react';\nimport { EditIcon, PhoneIcon } from '@chakra-ui/icons';\n\nconst contactsSchema = Yup.object().shape({\n  name: Yup.string().min(3, 'Too Short!').required('Must not be empty'),\n  number: Yup.string()\n    .min(9, 'Must be 9 or more')\n    .max(15, 'Must be no more than 15')\n    .required('Must not be empty'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={contactsSchema}\n      onSubmit={(values, actions) => {\n        dispatch(addContact(values));\n        actions.resetForm();\n      }}\n    >\n      <Form>\n        <VStack\n          spacing=\"4\"\n          p=\"5\"\n          m=\"5\"\n          bg=\"white\"\n          align=\"stretch\"\n          w=\"350px\"\n          borderRadius=\"5\"\n        >\n          <Heading size=\"md\">Add contact:</Heading>\n          <Field name=\"name\">\n            {({ field, form }) => (\n              <FormControl isInvalid={form.errors.name && form.touched.name}>\n                <FormLabel htmlFor=\"name\" fontSize=\"\">\n                  Username\n                </FormLabel>\n                <InputGroup>\n                  <InputLeftElement pointerEvents=\"none\">\n                    <EditIcon color=\"gray.300\" mb=\"2\" />\n                  </InputLeftElement>\n                  <Input {...field} id=\"name\" type=\"text\" size=\"sm\" />\n                </InputGroup>\n\n                <FormErrorMessage color=\"red\">\n                  {form.errors.name}\n                </FormErrorMessage>\n              </FormControl>\n            )}\n          </Field>\n          <Field name=\"number\">\n            {({ field, form }) => (\n              <FormControl\n                isInvalid={form.errors.number && form.touched.number}\n              >\n                <FormLabel htmlFor=\"number\" fontSize=\"\">\n                  Number\n                </FormLabel>\n                <InputGroup>\n                  <InputLeftElement pointerEvents=\"none\">\n                    <PhoneIcon color=\"gray.300\" mb=\"2\" />\n                  </InputLeftElement>\n                  <Input {...field} id=\"number\" type=\"text\" size=\"sm\" />\n                </InputGroup>\n                <FormErrorMessage color=\"red\">\n                  {form.errors.number}\n                </FormErrorMessage>\n              </FormControl>\n            )}\n          </Field>\n          <Button colorScheme=\"teal\" type=\"submit\" size=\"sm\">\n            Add contact\n          </Button>\n        </VStack>\n      </Form>\n    </Formik>\n  );\n};\n","import { Icon, IconProps } from \"@chakra-ui/icon\"\nimport { createContext } from \"@chakra-ui/react-context\"\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\"\nimport type {\n  HTMLChakraProps,\n  SystemProps,\n  ThemingProps,\n} from \"@chakra-ui/system\"\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemStyleObject,\n  useMultiStyleConfig,\n} from \"@chakra-ui/system\"\n\nconst [ListStylesProvider, useListStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `ListStylesContext`,\n  errorMessage: `useListStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<List />\" `,\n})\n\nexport { useListStyles }\n\ninterface ListOptions {\n  /**\n   * Shorthand prop for `listStyleType`\n   * @type SystemProps[\"listStyleType\"]\n   */\n  styleType?: SystemProps[\"listStyleType\"]\n  /**\n   * Shorthand prop for `listStylePosition`\n   * @type SystemProps[\"listStylePosition\"]\n   */\n  stylePosition?: SystemProps[\"listStylePosition\"]\n  /**\n   * The space between each list item\n   * @type SystemProps[\"margin\"]\n   */\n  spacing?: SystemProps[\"margin\"]\n}\n\nexport interface ListProps\n  extends HTMLChakraProps<\"ul\">,\n    ThemingProps<\"List\">,\n    ListOptions {}\n\n/**\n * List is used to display list items, it renders a `<ul>` by default.\n *\n * @see Docs https://chakra-ui.com/list\n */\nexport const List = forwardRef<ListProps, \"ul\">(function List(props, ref) {\n  const styles = useMultiStyleConfig(\"List\", props)\n  const {\n    children,\n    styleType = \"none\",\n    stylePosition,\n    spacing,\n    ...rest\n  } = omitThemingProps(props)\n\n  const validChildren = getValidChildren(children)\n\n  const selector = \"& > *:not(style) ~ *:not(style)\"\n\n  const spacingStyle = spacing ? { [selector]: { mt: spacing } } : {}\n\n  return (\n    <ListStylesProvider value={styles}>\n      <chakra.ul\n        ref={ref}\n        listStyleType={styleType}\n        listStylePosition={stylePosition}\n        /**\n         * We added this role to fix the Safari accessibility issue with list-style-type: none\n         * @see https://www.scottohara.me/blog/2019/01/12/lists-and-safari.html\n         */\n        role=\"list\"\n        __css={{ ...styles.container, ...spacingStyle }}\n        {...rest}\n      >\n        {validChildren}\n      </chakra.ul>\n    </ListStylesProvider>\n  )\n})\n\nList.displayName = \"List\"\n\nexport const OrderedList = forwardRef<ListProps, \"ol\">((props, ref) => {\n  const { as, ...rest } = props\n  return (\n    <List ref={ref} as=\"ol\" styleType=\"decimal\" marginStart=\"1em\" {...rest} />\n  )\n})\n\nOrderedList.displayName = \"OrderedList\"\n\nexport const UnorderedList = forwardRef<ListProps, \"ul\">(function UnorderedList(\n  props,\n  ref,\n) {\n  const { as, ...rest } = props\n  return (\n    <List ref={ref} as=\"ul\" styleType=\"initial\" marginStart=\"1em\" {...rest} />\n  )\n})\n\nUnorderedList.displayName = \"UnorderedList\"\n\nexport interface ListItemProps extends HTMLChakraProps<\"li\"> {}\n\n/**\n * ListItem\n *\n * Used to render a list item\n */\nexport const ListItem = forwardRef<ListItemProps, \"li\">(function ListItem(\n  props,\n  ref,\n) {\n  const styles = useListStyles()\n\n  return <chakra.li ref={ref} {...props} __css={styles.item} />\n})\n\nListItem.displayName = \"ListItem\"\n\n/**\n * ListIcon\n *\n * Used to render an icon beside the list item text\n */\nexport const ListIcon = forwardRef<IconProps, \"svg\">(function ListIcon(\n  props,\n  ref,\n) {\n  const styles = useListStyles()\n\n  return <Icon ref={ref} role=\"presentation\" {...props} __css={styles.icon} />\n})\n\nListIcon.displayName = \"ListIcon\"\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { ListItem, Button } from '@chakra-ui/react';\n\nexport const ContactItem = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <ListItem mt=\"4\">\n      <b>{contact.name}</b>: {contact.number}\n      <Button\n        size=\"xs\"\n        ml=\"2\"\n        colorScheme=\"yellow\"\n        onClick={() => dispatch(deleteContact(contact.id))}\n      >\n        Delete\n      </Button>\n    </ListItem>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { visibleContacts } from '../../redux/contacts/selectors';\nimport { ContactItem } from './ContactItem';\n\nimport { UnorderedList } from '@chakra-ui/react';\n\nexport const ContactList = () => {\n  const visibleContact = useSelector(visibleContacts);\n\n  return (\n    <>\n      {visibleContact.length ? (\n        <UnorderedList mt=\"4\">\n          {visibleContact.map(contact => (\n            <ContactItem key={contact.id} contact={contact} />\n          ))}\n        </UnorderedList>\n      ) : (\n        <p>No contacts according to your search!</p>\n      )}\n    </>\n  );\n};\n","import { createIcon } from \"@chakra-ui/icon\"\n\nexport const Search2Icon = createIcon({\n  d: \"M23.414,20.591l-4.645-4.645a10.256,10.256,0,1,0-2.828,2.829l4.645,4.644a2.025,2.025,0,0,0,2.828,0A2,2,0,0,0,23.414,20.591ZM10.25,3.005A7.25,7.25,0,1,1,3,10.255,7.258,7.258,0,0,1,10.25,3.005Z\",\n  displayName: \"Search2Icon\",\n})\n","import { useDispatch, useSelector } from 'react-redux';\nimport { updateFilter } from '../../redux/contacts/filterSlice';\nimport { selectFilters } from '../../redux/contacts/selectors';\n\nimport { Box, InputGroup, InputLeftElement, Input } from '@chakra-ui/react';\nimport { Search2Icon } from '@chakra-ui/icons';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Box pt=\"4\">\n      Find contacts by name\n      <InputGroup>\n        <InputLeftElement pointerEvents=\"none\">\n          <Search2Icon color=\"gray.300\" mt=\"2\" />\n        </InputLeftElement>\n        <Input\n          mt=\"2\"\n          size=\"sm\"\n          type=\"text\"\n          name=\"filter\"\n          onChange={evt => dispatch(updateFilter(evt.target.value))}\n          value={useSelector(selectFilters)}\n        />\n      </InputGroup>\n    </Box>\n  );\n};\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Helmet } from 'react-helmet-async';\nimport { Loader } from '../components/Loader/Loader';\nimport {\n  selectContacts,\n  selectIsLoading,\n  selectError,\n} from '../redux/contacts/selectors';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { Section } from '../components/Section/Section';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { Filter } from '../components/Filter/Filter';\n\nimport { Flex, Box, Heading } from '@chakra-ui/react';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Flex alignItems=\"flex-start\" justifyContent=\"center\">\n      <Helmet>\n        <title>Phonebook - Contacts list</title>\n      </Helmet>\n      <div>\n        <Section>\n          <ContactForm />\n        </Section>\n      </div>\n\n      <Box\n        spacing=\"4\"\n        p=\"5\"\n        m=\"5\"\n        bg=\"white\"\n        align=\"stretch\"\n        w=\"350px\"\n        borderRadius=\"5\"\n        boxShadow=\"base\"\n      >\n        <Heading size=\"md\">Contacts:</Heading>\n        {contacts.length ? (\n          <Section>\n            <Filter />\n            <ContactList />\n          </Section>\n        ) : (\n          <p>No contacts...</p>\n        )}\n        {isLoading && !error && <Loader />}\n      </Box>\n    </Flex>\n  );\n}\n","import { createIcon } from \"@chakra-ui/icon\"\n\nexport const EditIcon = createIcon({\n  displayName: \"EditIcon\",\n  path: (\n    <g fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeWidth=\"2\">\n      <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\" />\n      <path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\" />\n    </g>\n  ),\n})\n"],"names":["Section","_ref","title","children","_jsxs","_jsx","PhoneIcon","createIcon","d","displayName","viewBox","contactsSchema","Yup","shape","name","min","required","number","max","ContactForm","dispatch","useDispatch","Formik","initialValues","validationSchema","onSubmit","values","actions","addContact","resetForm","Form","VStack","spacing","p","m","bg","align","w","borderRadius","Heading","size","Field","field","form","FormControl","isInvalid","errors","touched","FormLabel","htmlFor","fontSize","InputGroup","InputLeftElement","pointerEvents","EditIcon","color","mb","Input","_objectSpread","id","type","FormErrorMessage","_ref2","Button","colorScheme","createContext","errorMessage","_createContext2","ListStylesProvider","useListStyles","List","forwardRef","props","ref","styles","useMultiStyleConfig","omitThemingProps","_omitThemingProps$sty","styleType","stylePosition","rest","validChildren","getValidChildren","spacingStyle","mt","value","chakra","ul","listStyleType","listStylePosition","role","__css","container","as","marginStart","UnorderedList","ListItem","li","item","Icon","icon","ContactItem","contact","ml","onClick","deleteContact","ContactList","visibleContact","useSelector","visibleContacts","_Fragment","length","map","Search2Icon","Filter","Box","pt","onChange","evt","updateFilter","target","selectFilters","Contacts","contacts","selectContacts","isLoading","selectIsLoading","error","selectError","useEffect","fetchContacts","Flex","alignItems","justifyContent","Helmet","boxShadow","Loader","path","fill","stroke","strokeLinecap","strokeWidth"],"sourceRoot":""}