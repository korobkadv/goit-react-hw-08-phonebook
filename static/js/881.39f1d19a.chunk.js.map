{"version":3,"file":"static/js/881.39f1d19a.chunk.js","mappings":"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","sources":["pages/Register.styled.js","components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.js","pages/Register.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const RegisterWrapper = styled.div`\n  width: 400px;\n\n  padding: ${p => p.theme.spacing(1)};\n  margin: ${p => p.theme.spacing(1)} ${p => p.theme.spacing(4)};\n`;\n","import {\n  Form as FormikForm,\n  Field as FormikField,\n  ErrorMessage as FormikError,\n} from 'formik';\nimport styled from 'styled-components';\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  max-width: 320px;\n`;\n\nexport const Field = styled(FormikField)`\n  width: 100%;\n\n  padding: ${p => p.theme.spacing(1)};\n  margin: ${p => p.theme.spacing(1)} 0;\n\n  border: 1px solid ${p => p.theme.colors.greyText};\n  border-radius: ${p => p.theme.spacing(1)};\n  background-color: ${p => p.theme.colors.white};\n\n  transition: border-color 0.3s ease-in-out;\n\n  &:focus {\n    border: 1px solid ${p => p.theme.colors.acent};\n    outline: none;\n  }\n\n  &::placeholder {\n    color: #aaa;\n    font-style: italic;\n  }\n`;\n\nexport const FormGroup = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  color: ${p => p.theme.colors.error};\n  font-size: 14px;\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  padding: ${p => p.theme.spacing(1)} ${p => p.theme.spacing(3)};\n  font-size: 16px;\n  text-align: center;\n  text-decoration: none;\n  cursor: pointer;\n  border: 1px solid ${p => p.theme.colors.acent};\n  color: ${p => p.theme.colors.acent};\n  border-radius: ${p => p.theme.spacing(1)};\n  transition: background-color 0.3s, color 0.3s, border-color 0.3s;\n\n  &:hover {\n    background-color: ${p => p.theme.colors.acent};\n    color: ${p => p.theme.colors.white};\n  }\n\n  &:active {\n    background-color: ${p => p.theme.colors.acent2};\n    border-color: ${p => p.theme.colors.acent2};\n    color: ${p => p.theme.colors.white};\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { register } from '../../redux/auth/operations';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  Form,\n  Button,\n  FormGroup,\n  Field,\n  ErrorMessage,\n} from './RegisterForm.styled';\n\nconst contactsSchema = Yup.object().shape({\n  name: Yup.string().min(3, 'Too Short!').required('Must not be empty'),\n  email: Yup.string()\n    .email('Enter valid email address')\n    .required('Must not be empty'),\n  password: Yup.string()\n    .min(7, 'Must be 7 or more')\n    .max(15, 'Must be no more than 15')\n    .required('Must not be empty'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        email: '',\n        password: '',\n      }}\n      validationSchema={contactsSchema}\n      onSubmit={(values, actions) => {\n        dispatch(register(values));\n        actions.resetForm();\n      }}\n    >\n      <Form>\n        <FormGroup>\n          Username\n          <Field name=\"name\" />\n          <ErrorMessage name=\"name\" component=\"span\" />\n        </FormGroup>\n        <FormGroup>\n          Email\n          <Field name=\"email\" type=\"email\" />\n          <ErrorMessage name=\"email\" component=\"span\" />\n        </FormGroup>\n        <FormGroup>\n          Password\n          <Field name=\"password\" type=\"password\" />\n          <ErrorMessage name=\"password\" component=\"span\" />\n        </FormGroup>\n\n        <Button type=\"submit\" name=\"register\">\n          Register\n        </Button>\n      </Form>\n    </Formik>\n  );\n};\n","import { Helmet } from 'react-helmet-async';\nimport { RegisterWrapper } from './Register.styled';\nimport { RegisterForm } from '../components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <RegisterWrapper>\n      <Helmet>\n        <title>Phonebook - Register</title>\n      </Helmet>\n      <RegisterForm />\n    </RegisterWrapper>\n  );\n}\n"],"names":["RegisterWrapper","styled","_templateObject","_taggedTemplateLiteral","p","theme","spacing","Form","FormikForm","Field","FormikField","_templateObject2","colors","greyText","white","acent","FormGroup","_templateObject3","ErrorMessage","FormikError","_templateObject4","error","Button","_templateObject5","acent2","contactsSchema","Yup","shape","name","min","required","email","password","max","RegisterForm","dispatch","useDispatch","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","register","resetForm","children","_jsxs","component","type","Register","Helmet"],"sourceRoot":""}