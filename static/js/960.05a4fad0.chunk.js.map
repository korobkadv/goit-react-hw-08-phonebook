{"version":3,"file":"static/js/960.05a4fad0.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.js","pages/Login.js","../node_modules/@chakra-ui/icons/src/AtSign.tsx","../node_modules/@chakra-ui/icons/src/Lock.tsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { logIn } from '../../redux/auth/operations';\n\nimport {\n  Box,\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n  FormErrorMessage,\n  VStack,\n  Heading,\n  InputGroup,\n  InputLeftElement,\n} from '@chakra-ui/react';\nimport { AtSignIcon, LockIcon } from '@chakra-ui/icons';\n\nconst contactsSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('Enter valid email address')\n    .required('Must not be empty'),\n  password: Yup.string().required('Must not be empty'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        password: '',\n      }}\n      validationSchema={contactsSchema}\n      onSubmit={(values, actions) => {\n        dispatch(logIn(values));\n        actions.resetForm();\n      }}\n    >\n      <Box padding=\"4\" w=\"100%\">\n        <Form>\n          <VStack\n            spacing=\"4\"\n            p=\"5\"\n            bg=\"white\"\n            align=\"stretch\"\n            w=\"350px\"\n            ml=\"auto\"\n            mr=\"auto\"\n            borderRadius=\"5\"\n          >\n            <Heading size=\"md\">Log In:</Heading>\n            <Field name=\"email\">\n              {({ field, form }) => (\n                <FormControl\n                  isInvalid={form.errors.email && form.touched.email}\n                >\n                  <FormLabel htmlFor=\"email\" fontSize=\"\">\n                    Email\n                  </FormLabel>\n                  <InputGroup>\n                    <InputLeftElement pointerEvents=\"none\">\n                      <AtSignIcon color=\"gray.300\" mb=\"2\" />\n                    </InputLeftElement>\n                    <Input {...field} id=\"email\" type=\"email\" size=\"sm\" />\n                  </InputGroup>\n                  <FormErrorMessage color=\"red\">\n                    {form.errors.email}\n                  </FormErrorMessage>\n                </FormControl>\n              )}\n            </Field>\n            <Field name=\"password\">\n              {({ field, form }) => (\n                <FormControl\n                  isInvalid={form.errors.password && form.touched.password}\n                >\n                  <FormLabel htmlFor=\"password\">Password</FormLabel>\n                  <InputGroup>\n                    <InputLeftElement pointerEvents=\"none\">\n                      <LockIcon color=\"gray.300\" mb=\"2\" />\n                    </InputLeftElement>\n                    <Input {...field} id=\"password\" type=\"password\" size=\"sm\" />\n                  </InputGroup>\n\n                  <FormErrorMessage color=\"red\">\n                    {form.errors.password}\n                  </FormErrorMessage>\n                </FormControl>\n              )}\n            </Field>\n            <Button colorScheme=\"teal\" type=\"submit\">\n              Log In\n            </Button>\n          </VStack>\n        </Form>\n      </Box>\n    </Formik>\n  );\n};\n","import { Helmet } from 'react-helmet-async';\nimport { LoginForm } from '../components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <div>\n      <Helmet>\n        <title>Phonebook - Log In</title>\n      </Helmet>\n      <LoginForm />\n    </div>\n  );\n}\n","import { createIcon } from \"@chakra-ui/icon\"\n\nexport const AtSignIcon = createIcon({\n  displayName: \"AtSignIcon\",\n  d: \"M12,.5A11.634,11.634,0,0,0,.262,12,11.634,11.634,0,0,0,12,23.5a11.836,11.836,0,0,0,6.624-2,1.25,1.25,0,1,0-1.393-2.076A9.34,9.34,0,0,1,12,21a9.132,9.132,0,0,1-9.238-9A9.132,9.132,0,0,1,12,3a9.132,9.132,0,0,1,9.238,9v.891a1.943,1.943,0,0,1-3.884,0V12A5.355,5.355,0,1,0,12,17.261a5.376,5.376,0,0,0,3.861-1.634,4.438,4.438,0,0,0,7.877-2.736V12A11.634,11.634,0,0,0,12,.5Zm0,14.261A2.763,2.763,0,1,1,14.854,12,2.812,2.812,0,0,1,12,14.761Z\",\n})\n","import { createIcon } from \"@chakra-ui/icon\"\n\nexport const LockIcon = createIcon({\n  d: \"M19.5,9.5h-.75V6.75a6.75,6.75,0,0,0-13.5,0V9.5H4.5a2,2,0,0,0-2,2V22a2,2,0,0,0,2,2h15a2,2,0,0,0,2-2V11.5A2,2,0,0,0,19.5,9.5Zm-9.5,6a2,2,0,1,1,3,1.723V19.5a1,1,0,0,1-2,0V17.223A1.994,1.994,0,0,1,10,15.5ZM7.75,6.75a4.25,4.25,0,0,1,8.5,0V9a.5.5,0,0,1-.5.5H8.25a.5.5,0,0,1-.5-.5Z\",\n  displayName: \"LockIcon\",\n})\n"],"names":["contactsSchema","Yup","shape","email","required","password","LoginForm","dispatch","useDispatch","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","logIn","resetForm","children","Box","padding","w","Form","_jsxs","VStack","spacing","p","bg","align","ml","mr","borderRadius","Heading","size","Field","name","_ref","field","form","FormControl","isInvalid","errors","touched","FormLabel","htmlFor","fontSize","InputGroup","InputLeftElement","pointerEvents","AtSignIcon","color","mb","Input","_objectSpread","id","type","FormErrorMessage","_ref2","LockIcon","Button","colorScheme","Login","Helmet","createIcon","displayName","d"],"sourceRoot":""}