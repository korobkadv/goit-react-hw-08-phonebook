{"version":3,"file":"static/js/960.f04bdffd.chunk.js","mappings":"yUAgBMA,EAAiBC,EAAAA,KAAaC,MAAM,CACxCC,MAAOF,EAAAA,KACJE,MAAM,6BACNC,SAAS,qBACZC,SAAUJ,EAAAA,KAAaG,SAAS,uBAGrBE,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAe,CACbR,MAAO,GACPE,SAAU,IAEZO,iBAAkBZ,EAClBa,SAAU,SAACC,EAAQC,GACjBR,GAASS,EAAAA,EAAAA,IAAMF,IACfC,EAAQE,WACV,EAAEC,UAEFT,EAAAA,EAAAA,KAACU,EAAAA,GAAG,CAACC,QAAQ,IAAIC,EAAE,OAAMH,UACvBT,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAAAJ,UACHK,EAAAA,EAAAA,MAACC,EAAAA,EAAM,CACLC,QAAQ,IACRC,EAAE,IACFC,GAAG,QACHC,MAAM,UACNP,EAAE,QACFQ,GAAG,OACHC,GAAG,OACHC,aAAa,IAAGb,SAAA,EAEhBT,EAAAA,EAAAA,KAACuB,EAAAA,EAAO,CAACC,KAAK,KAAIf,SAAC,aACnBT,EAAAA,EAAAA,KAACyB,EAAAA,GAAK,CAACC,KAAK,QAAOjB,SAChB,SAAAkB,GAAA,IAAGC,EAAKD,EAALC,MAAOC,EAAIF,EAAJE,KAAI,OACbf,EAAAA,EAAAA,MAACgB,EAAAA,GAAW,CACVC,UAAWF,EAAKG,OAAOtC,OAASmC,EAAKI,QAAQvC,MAAMe,SAAA,EAEnDT,EAAAA,EAAAA,KAACkC,EAAAA,EAAS,CAACC,QAAQ,QAAQC,SAAS,GAAE3B,SAAC,WAGvCT,EAAAA,EAAAA,KAACqC,EAAAA,GAAKC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKV,GAAK,IAAEW,GAAG,QAAQC,KAAK,QAAQhB,KAAK,SAC/CxB,EAAAA,EAAAA,KAACyC,EAAAA,GAAgB,CAACC,MAAM,MAAKjC,SAC1BoB,EAAKG,OAAOtC,UAEH,KAGlBM,EAAAA,EAAAA,KAACyB,EAAAA,GAAK,CAACC,KAAK,WAAUjB,SACnB,SAAAkC,GAAA,IAAGf,EAAKe,EAALf,MAAOC,EAAIc,EAAJd,KAAI,OACbf,EAAAA,EAAAA,MAACgB,EAAAA,GAAW,CACVC,UAAWF,EAAKG,OAAOpC,UAAYiC,EAAKI,QAAQrC,SAASa,SAAA,EAEzDT,EAAAA,EAAAA,KAACkC,EAAAA,EAAS,CAACC,QAAQ,WAAU1B,SAAC,cAC9BT,EAAAA,EAAAA,KAACqC,EAAAA,GAAKC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKV,GAAK,IAAEW,GAAG,WAAWC,KAAK,WAAWhB,KAAK,SACrDxB,EAAAA,EAAAA,KAACyC,EAAAA,GAAgB,CAACC,MAAM,MAAKjC,SAC1BoB,EAAKG,OAAOpC,aAEH,KAGlBI,EAAAA,EAAAA,KAAC4C,EAAAA,EAAM,CAACC,YAAY,OAAOL,KAAK,SAAQ/B,SAAC,mBAQrD,ECpFe,SAASqC,IACtB,OACEhC,EAAAA,EAAAA,MAAA,OAAAL,SAAA,EACET,EAAAA,EAAAA,KAAC+C,EAAAA,GAAM,CAAAtC,UACLT,EAAAA,EAAAA,KAAA,SAAAS,SAAO,0BAETT,EAAAA,EAAAA,KAACH,EAAS,MAGhB,C","sources":["components/LoginForm/LoginForm.js","pages/Login.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { logIn } from '../../redux/auth/operations';\n\nimport {\n  Box,\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n  FormErrorMessage,\n  VStack,\n  Heading,\n} from '@chakra-ui/react';\n\nconst contactsSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('Enter valid email address')\n    .required('Must not be empty'),\n  password: Yup.string().required('Must not be empty'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        password: '',\n      }}\n      validationSchema={contactsSchema}\n      onSubmit={(values, actions) => {\n        dispatch(logIn(values));\n        actions.resetForm();\n      }}\n    >\n      <Box padding=\"4\" w=\"100%\">\n        <Form>\n          <VStack\n            spacing=\"4\"\n            p=\"5\"\n            bg=\"white\"\n            align=\"stretch\"\n            w=\"350px\"\n            ml=\"auto\"\n            mr=\"auto\"\n            borderRadius=\"5\"\n          >\n            <Heading size=\"md\">Log In:</Heading>\n            <Field name=\"email\">\n              {({ field, form }) => (\n                <FormControl\n                  isInvalid={form.errors.email && form.touched.email}\n                >\n                  <FormLabel htmlFor=\"email\" fontSize=\"\">\n                    Email\n                  </FormLabel>\n                  <Input {...field} id=\"email\" type=\"email\" size=\"sm\" />\n                  <FormErrorMessage color=\"red\">\n                    {form.errors.email}\n                  </FormErrorMessage>\n                </FormControl>\n              )}\n            </Field>\n            <Field name=\"password\">\n              {({ field, form }) => (\n                <FormControl\n                  isInvalid={form.errors.password && form.touched.password}\n                >\n                  <FormLabel htmlFor=\"password\">Password</FormLabel>\n                  <Input {...field} id=\"password\" type=\"password\" size=\"sm\" />\n                  <FormErrorMessage color=\"red\">\n                    {form.errors.password}\n                  </FormErrorMessage>\n                </FormControl>\n              )}\n            </Field>\n            <Button colorScheme=\"teal\" type=\"submit\">\n              Log In\n            </Button>\n          </VStack>\n        </Form>\n      </Box>\n    </Formik>\n  );\n};\n","import { Helmet } from 'react-helmet-async';\nimport { LoginForm } from '../components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <div>\n      <Helmet>\n        <title>Phonebook - Log In</title>\n      </Helmet>\n      <LoginForm />\n    </div>\n  );\n}\n"],"names":["contactsSchema","Yup","shape","email","required","password","LoginForm","dispatch","useDispatch","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","logIn","resetForm","children","Box","padding","w","Form","_jsxs","VStack","spacing","p","bg","align","ml","mr","borderRadius","Heading","size","Field","name","_ref","field","form","FormControl","isInvalid","errors","touched","FormLabel","htmlFor","fontSize","Input","_objectSpread","id","type","FormErrorMessage","color","_ref2","Button","colorScheme","Login","Helmet"],"sourceRoot":""}